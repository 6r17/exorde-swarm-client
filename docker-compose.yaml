version: '3'

services:
  orchestrator:
    build: .
    restart: always
    working_dir: /app/
    command: python3.10 multi.py --as orchestrator --jlog -c topology/docker.yaml --novenv
    volumes: 
      - ./topology:/app/topology
      - ./data:/data
    labels:
      exorde: monitor

  spotting:
    build: .
    restart: always
    working_dir: /app/
    command: python3.10 multi.py --as spotting --jlog -c topology/docker.yaml --novenv
    volumes:
      - ./topology:/app/topology
    labels:
      exorde: monitor

  scraper_one:
    build: .
    restart: always
    working_dir: /app/
    command: python3.10 multi.py --as scraper_one --jlog -c topology/docker.yaml --novenv
    volumes:
      - ./topology:/app/topology
    labels:
      exorde: monitor

  scraper_two:
    build: .
    restart: always
    working_dir: /app/
    command: python3.10 multi.py --as scraper_two --jlog -c topology/docker.yaml --novenv
    volumes:
      - ./topology:/app/topology
    labels:
      exorde: monitor

  monitor:
    build: .
    restart: always
    working_dir: /app/
    command: python3.10 multi.py --as monitor -c topology/docker.yaml --novenv
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./topology:/app/topology
    ports:
      - "8004:8004"

  prometheus:
    image: prom/prometheus:v2.33.1
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./prometheus-targets.json:/etc/prometheus/prometheus-targets.json  # Adding the targets file
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
